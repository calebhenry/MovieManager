# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Jest Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: moviemanager.client/package-lock.json
    - run: npm ci
      working-directory: ./moviemanager.client
    - run: npm test
      working-directory: ./moviemanager.client
    - uses: actions/upload-artifact@v4  # upload test results
      if: success() || failure()        # run this step even if previous step failed
      with:
        name: test-results
        path: jest-junit.xml
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure() 
      with:
        name: JEST Tests 
        path: reports/jest-*.xml
        reporter: jest-junit
